from matplotlib import rc
import matplotlib.pyplot as plt
from matplotlib.patches import Rectangle

import numpy as np
import pandas as pd

import dufte


plt.rcParams['font.sans-serif'] = 'CMU Serif'
plt.rcParams['font.weight'] = 'bold'


def temperature_plot():
    #plt.style.use('dark_background')
   
    days = np.linspace(1, 30, 30)
    month = '.Mar'

    x0 = [days + month for days in days.astype(int).astype(str)]

    y0 = [19.2,17.1,14.8,12.9,11.4,9.70,11.7,13.9,14.3,14.5,16.1,8.80,5.90,8.50,13.7,12.5,9.60,10.7,8.30,12.9,14.1,14.3,11.1,12.8,14.7,16.1,17.1,12.5,5.40,None]
    y1 = [5.6,4.8,3.4,3.9,4.8,3.1,1.7,2.4,4.5,4.6,6.1,6.2,1.9,0.5,2.1,2.2,1.7,4.3,3.2,2.3,0.6,2.7,5.6,3.4,1,4.5,4.3,5.4,4.7,None]
    y2 = [11.4,10.3,9.1,8.5,7.7,5.9,6.5,8,9.2,9.8,10.9,8.1,4,4,7.7,7.7,6.3,6.9,6,7.4,7.6,9.1,7.9,8.4,8.9,10.3,10.1,8.4,None,None]

    plt.figure(figsize=(10,4))
    plt.title('Temperature vs Time', fontsize=15, fontweight='bold')
    axes = plt.gca()
    axes.yaxis.grid(color="gray", linestyle="dashed", linewidth=0.5)
    plt.xticks(np.linspace(1,30,10))
    plt.xlabel(xlabel="March, 2023",fontsize=12)
    plt.ylabel(ylabel="Temperature [Â°C]",fontsize=12)

    plt.plot(x0, y0, color = '#b45f5f', label = 'Max', linewidth=2)
    plt.plot(x0, y2, color = '#40b062', label = 'Mean', linewidth=2)
    plt.plot(x0, y1, color = '#4062b0', label = 'Min', linewidth=2)
    # plt.legend(loc='center right', fontsize=12)
    plt.legend(labelspacing=9.65, loc=6, bbox_to_anchor=(1, 0.5))
    plt.tight_layout(rect=[0, 0, 1, 1])
    plt.show()


def precipitation_bar():
    #plt.style.use('dark_background')
    days = np.linspace(1, 30, 30)
    month = '.Mar'

    x0 = [days + month for days in days.astype(int).astype(str)]

    # set width of bar
    barWidth = 1
    fig = plt.subplots(figsize =(10, 4))
    
    # set height of bar
    prec_raw = [0,0,0,0,0,0.1,0.1,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0.3,0.3,0.2,0.1,0,0,0,0,0,0,0,0,0,0.1,0.5,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3,0.1,0.2,0.3,0.5,1.2,1.2,0.9,0.9,0.9,1,1,1.3,1.3,1.5,1,0.4,0.2,0.1,0.2,0.2,0.2,0.2,0.1,0,0.1,0.1,0.1,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1,0.1,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1,0,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.2,0.4,0.3,0.2,0.4,0.2,0,0.1,0.1,0.6,0.5,0.6,1.3,1.8,1.6,1.3,1.4,1.6,1.7,1.9,2.2,2.2,2.4,2,1.6,1,0.8,1,0.9,0.5,0.4,0.3,0.2,0.3,0.2,0.1,0.1,0.1,0,0.1,0.3,0.4,0.4,0.5,0.2,0.1,0,0,0.2,0.3,0.4,0.3,0.4,0.4,0.4,0.4,0.5,0.5,0.5,0.4,0.4,0.6,0.6,0.4,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.8,0.2,0.6,1.2,0.5,0.1,0.4,0,0,0,0.6,0.1,0.1,0,0,0,0,0,0,0.1,0.2,0.3,0.7,0.4,0.7,0.8,1.2,1.5,1.3,1.1,0.5,0.6,0.8,1.4,1.9,2.1,0.7,0.4,0.2,0.1,0,0,0,0,0,0,0,0,0,0,0.2,0.1,0.5,0.1,0.1,0.3,0.7,0.1,0.1,0,0.2,0.1,0.1,0.1,0,0,0,0.1,0.1,0,0,0.1,0.9,1.1,0.5,0.4,0.1,0.1,0.1,0.2,0.1,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.3,0.2,0.1,0.1,0.1,0.1,0.2,0.5,0.8,1.1,1.2,1,0.6,0.1,0.2,0.2,0.1,0.1,0.1,0,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.1,0,0,0.1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.7,1.3,1,0.9,2.4,0.5,1,0.6,0.7,0.3,0.1,0.5,0.3,0.3,0.5,0.2,0.8,0.3,0.4]
    prec = [sum(prec_raw[i:i+24]) for i in range(0, len(prec_raw), 24)]

    cloud_raw = [69,77,88,85,87,90,89,89,89,62,48,22,19,27,18,31,29,29,31,32,31,32,33,33,32,24,5,20,29,31,29,30,28,29,29,25,32,50,60,44,40,27,40,39,39,35,38,36,47,57,46,44,48,47,60,100,100,100,81,34,43,16,13,14,1,18,23,17,11,20,24,20,29,36,34,28,42,44,34,15,23,65,68,92,64,84,98,66,69,100,93,95,100,100,100,100,100,97,92,45,55,73,100,100,100,100,100,100,100,100,100,100,100,90,100,100,100,100,100,100,100,100,62,92,100,100,100,100,100,100,100,100,100,56,38,34,80,86,45,2,5,2,0,11,28,30,41,35,40,38,67,88,74,73,79,91,100,99,100,86,84,61,44,31,8,19,18,34,29,18,12,6,10,11,14,18,17,10,9,13,55,16,15,10,3,3,6,34,49,4,9,6,17,8,21,42,34,21,11,5,7,10,25,34,62,59,76,87,73,83,68,64,66,64,86,98,100,82,75,92,68,49,62,70,65,96,100,100,100,98,100,100,100,100,100,100,100,83,72,100,98,90,96,100,89,55,52,78,95,88,81,76,74,88,81,69,82,70,78,76,85,89,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,61,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,98,100,100,100,100,100,100,100,100,100,100,100,92,90,90,90,90,90,89,93,94,78,77,67,55,45,55,73,87,88,91,56,58,79,77,57,59,90,89,91,89,83,92,98,63,42,36,41,63,82,71,86,100,100,100,92,50,85,100,100,62,44,43,63,83,79,61,36,31,33,44,90,71,60,63,86,88,86,100,100,100,100,96,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,97,87,100,97,88,100,100,100,100,100,100,100,100,100,100,89,75,85,86,84,81,90,100,100,100,100,100,100,100,100,100,93,77,88,100,100,100,100,100,93,75,62,64,64,63,62,44,48,49,71,72,79,93,100,22,4,1,1,4,5,5,5,4,5,7,12,14,16,22,62,55,3,0,0,0,0,0,0,0,0,0,0,0,0,12,29,29,27,30,30,30,18,30,35,61,65,69,77,66,89,100,100,100,95,100,85,100,100,83,63,67,76,100,91,100,100,100,100,100,100,100,83,80,100,100,100,89,98,69,49,40,39,44,51,29,78,72,63,68,32,52,68,90,60,50,82,90,91,100,100,93,74,16,14,14,29,32,30,16,23,5,2,3,62,76,76,75,40,0,0,14,12,29,47,30,1,0,2,8,14,12,1,0,0,0,0,2,8,11,35,62,64,61,59,49,36,37,35,32,55,40,45,66,65,25,12,14,14,14,15,20,25,68,90,77,80,61,50,13,5,1,0,9,26,13,1,1,1,0,2,2,0,2,8,9,20,55,71,77,62,100,100,90,86,87,58,80,100,100,99,87,94,85,100,100,100,100]
    cloud = [sum(cloud_raw[i:i+24])/24 for i in range(0, len(cloud_raw), 24)]
    width = [x / 100 for x in cloud]

    # Set position of bar on X axis
    br1 = np.arange(len(prec))
    br2 = [x for x in br1]

    # Make the plot
    plt.bar(br2, max(prec), color ='#b3babf', width = width,
            edgecolor ='#b3babf', label ='Cloud Coverage %')
    plt.bar(br1, prec, color ='#6c9fce', width = barWidth/2,
            edgecolor ='#6c9fce', label ='Precipitation')
    
    # Adding Xticks
    plt.title('Precipitation and Cloud Coverage vs Time', fontsize=15, fontweight='bold')

    plt.xlabel('March, 2023', fontsize = 12)
    plt.ylabel('Total Precipitation [mm]', fontsize = 12)
    plt.xticks([r*3  for r in range(10)], x0[::3])
    
    plt.legend(loc='upper right')
    plt.show()


def weathercode_pie():
    #plt.style.use('Solarize_Light2')
    labels = 'Snow Fall', 'Drizzle', 'Rain', 'Cloudy', 'Clear'
    sizes = [2/27, 9/27, 6/27, 6/27, 4/27]

    explode = (0, 0.1, 0, 0, 0)  # only "explode" the 2nd slice (i.e. 'Hogs')

    fig, ax = plt.subplots()
    plt.title('Weather Code for March 2023, Ankara', fontsize=15, fontweight='bold')
    ax.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%',
            shadow=True, startangle=90)
    plt.show()


def wind_direction():
    wind_raw = [53,38,43,51,52,64,76,74,63,57,63,80,107,137,140,144,160,174,198,236,45,72,81,82,72,56,47,42,52,62,70,59,326,300,288,264,247,239,246,244,248,247,257,289,38,57,66,67,65,67,61,60,59,63,69,72,81,74,270,242,241,243,256,256,253,257,269,287,306,311,294,281,277,265,268,268,265,263,251,252,257,225,243,252,247,240,243,249,251,255,258,255,252,250,246,236,229,235,237,226,217,211,202,202,197,189,189,197,208,204,210,210,220,319,22,129,120,132,157,225,244,244,239,236,238,246,254,257,261,261,262,272,276,261,258,264,266,271,269,261,259,243,221,207,195,175,165,169,173,184,186,184,180,173,185,213,220,226,227,232,239,242,236,218,180,172,183,192,204,222,224,223,224,222,218,208,198,195,204,231,240,243,246,245,246,244,246,250,254,266,253,231,218,218,227,225,216,207,203,205,209,201,207,230,239,234,236,239,243,245,248,244,236,232,235,238,235,231,228,230,228,228,237,238,232,227,231,232,234,227,233,235,239,253,315,90,117,145,174,192,198,200,200,198,196,196,197,195,196,198,200,201,202,207,206,195,196,197,205,209,202,199,204,208,203,195,183,177,180,180,185,197,208,212,215,216,206,212,212,216,202,198,225,275,343,2,8,10,12,4,5,7,7,10,21,26,28,27,31,36,39,32,31,38,41,40,39,37,34,32,34,31,28,27,23,21,29,31,34,36,50,59,69,76,91,99,94,95,120,137,135,117,32,347,347,13,35,56,58,47,15,51,51,48,86,143,225,214,185,141,174,187,200,221,241,247,242,189,107,111,121,118,115,114,108,106,101,101,101,105,130,169,204,227,240,226,225,228,220,219,210,190,180,158,145,164,119,81,79,77,65,55,55,56,55,92,94,96,75,84,115,155,213,246,275,304,320,326,325,306,300,315,309,311,324,335,324,320,333,343,347,350,342,348,355,352,355,358,358,356,351,352,355,342,352,351,357,358,352,352,356,356,353,6,16,6,13,18,13,5,3,3,4,2,360,358,356,356,357,359,358,355,348,343,340,338,344,355,354,336,332,327,327,329,339,352,4,17,28,32,29,29,34,39,38,36,34,58,72,67,180,221,240,253,265,270,263,256,234,227,229,238,231,144,153,106,99,103,103,93,112,111,100,93,99,160,183,162,159,180,157,155,193,246,260,257,259,243,236,203,207,210,217,226,236,238,235,236,242,248,248,251,259,257,265,280,284,293,293,292,309,328,345,339,322,333,346,344,333,324,333,360,14,315,278,259,251,248,254,281,288,283,273,266,276,307,351,27,45,56,61,61,62,60,61,67,63,180,239,245,252,246,245,233,229,247,261,267,265,252,180,143,135,141,151,164,153,145,141,142,175,204,225,243,246,250,255,260,266,278,274,265,270,277,283,290,305,329,357,18,36,65,82,99,132,171,195,205,208,199,202,210,207,160,153,165,180,190,193,197,199,201,198,196,190,188,196,201,203,214,230,226,237,250,248,228,238,234,224,231,238,247,261,291,338]
    directions = 'North', 'West', 'East', 'South', 'North-East', 'North-West', 'South-East', 'South-West'
   
    wind_raw2 = [(x+1*(360/16))%360 for x in wind_raw]
    
    wind_dir_freq = [0,0,0,0,0,0,0,0]
    north = 0
    northwest = 0
    west = 0
    southwest = 0
    south = 0
    southeast = 0
    east = 0
    northeast = 0


    for wind in wind_raw:
        if wind > 0 and wind < 360/16 :
            wind_dir_freq[0] +=1
            north += 1
        if wind > 360/16*1 and wind < 360/16*3 :
            wind_dir_freq[1] +=1
            northeast +=1
        if wind > 360/16*3 and wind < 360/16*5 :
            wind_dir_freq[2] +=1
            east +=1
        if wind > 360/16*5 and wind < 360/16*7 :
            wind_dir_freq[3] +=1
            southeast +=1
        if wind > 360/16*7 and wind < 360/16*9 :
            wind_dir_freq[4] +=1
            south +=1
        if wind > 360/16*9 and wind < 360/16*11 :
            wind_dir_freq[5] +=1
            southwest +=1
        if wind > 360/16*11 and wind < 360/16*13 :
            wind_dir_freq[6] +=1
            west +=1
        if wind > 360/16*13 and wind < 360/16*15 :
            wind_dir_freq[7] +=1
            northwest +=1
        if wind > 360/16*15 and wind < 360 :
            wind_dir_freq[0] +=1
            north +=1


    # We can set the number of bins with the *bins* keyword argument.
    plt.figure(figsize=(10,4))
    plt.title('Wind Direction Frequency in Ankara, for March 2023', fontsize=15, fontweight='bold')
    axes = plt.gca()
    axes.set_axisbelow(True)
    axes.yaxis.grid(color="gray", linestyle="dashed", linewidth=0.5)
    plt.hist(wind_raw2, 8, color='#51ab88', edgecolor='#387c61', linewidth=0.2)
    plt.xticks([r*360/8+360/16 for r in range(8)], directions)
    plt.xlabel(xlabel="Wind Directions",fontsize=12)
    plt.ylabel(ylabel="Frequency in a Month [sample/hour]",fontsize=12)
    


    plt.show()


def temp_humm_scatter():
    temperature = [6.8,6.4,6.4,6.4,6.5,6.4,5.9,5.6,5.8,7.5,11.4,13.8,15.7,17.2,18.4,19,19.2,18.9,18,15.6,13.5,11.7,9.9,8.5,7.6,6.8,6.3,5.8,5.1,4.8,5,5.4,6.1,8,11.3,13.5,15.1,16.2,16.9,17.1,17.1,16.8,15.8,13.9,11,8.6,7.3,6.7,5.9,5.4,4.8,4.4,3.9,3.8,3.7,3.4,3.6,6,9.7,12,13.7,14.8,14.4,14.7,14.6,14.2,13.3,11.9,10.1,10,10.4,9.6,8.7,8,7.3,6.5,6,4.9,4.1,3.9,3.9,5.3,8,9.5,10.9,12.1,12.9,12.6,12.2,11.9,11.5,10.5,10.2,8.2,8.1,7.8,7.1,6.8,6.7,6.3,5.7,5.3,4.8,4.8,5.1,7,9,10.3,11,11.4,11.1,10.2,9.5,9,8.5,8,7.2,6.6,6.6,6.5,6.2,5.8,5.5,5.1,4.5,4.1,3.8,3.4,3.2,3.1,4.1,6.2,7.5,8.2,8.7,9.2,9.7,9.5,9.1,7.8,6.1,4.6,4,3.2,2.9,2.7,2.2,2,2,1.8,1.7,1.7,2,4.5,7,8.6,9.8,11,11.7,11.7,11.7,11.3,10.5,8.9,9,8.1,7.1,6.4,4.9,3.6,2.8,2.4,2.6,3.2,4.6,4.6,4.3,5.4,9.3,11,11.9,12.6,13.3,13.8,13.9,13.5,12.5,11.1,8.9,7.6,7.7,6.7,5.7,5.8,5.1,4.5,4.6,5.6,5.7,5.5,4.7,6.4,10.9,12.3,13.3,14.1,14.3,14.1,14.1,14,13.3,11.7,9.7,8.5,8.5,7.6,7.2,6.9,7.1,7.1,6.6,6.1,5.5,5,4.6,8.3,10.3,11.5,13.1,14,14.3,14.5,14.5,14.3,14.1,12.7,11,9.8,9.2,8.2,8.3,8.8,8.5,8.6,8.1,7.3,6.6,6.1,6.5,9.1,11.8,13.1,14,15.2,15.4,15.5,15.9,16.1,14.7,12.5,11.2,10.3,9.6,9.1,8.6,8.5,8.3,8.2,7.9,7.9,8,8.1,8.1,8.1,8.3,8.5,8.8,8.7,8.6,8.5,8.6,8.6,8.6,8,7.4,6.8,6.5,6.2,5.9,5.6,5.1,4.5,3.6,2.8,2.7,2.8,2.9,3.6,4.3,4.7,5.6,5.8,5.9,5.4,4.9,4.4,3.9,3,2.7,2.5,2.2,1.9,1.8,1.7,1.5,1.4,0.9,0.7,0.6,0.5,0.6,1.2,2.1,3.1,4.5,5.6,6.7,7.7,8.2,8.5,8.4,7.9,6.4,6.2,5.2,4.1,3.4,3,2.4,2.7,3.1,2.4,2.3,2.1,2.3,5.5,7.2,9.2,10.9,12.4,13.3,13.7,13.2,13.1,12.6,11.3,11,10.3,9.8,7,6.1,5.2,4.2,3.2,2.9,2.7,2.5,2.2,3.6,7.5,9.7,10.8,11.4,12,12.3,12.5,11.7,11.3,11,10.2,8.2,8.1,7.7,7,5.4,4.1,3.4,3,2.3,1.7,1.7,1.8,2.8,6.1,8.5,9.3,9.2,8.7,9.1,9.3,9.5,9.6,9.2,8.3,7.5,6.9,6.6,6.1,5.7,5.3,5.1,4.8,4.7,4.6,4.5,4.3,4.5,5.1,6.6,8.1,9.1,9.8,10.5,10.7,10.6,9.7,8.5,7.8,6.7,5.6,6.5,6.3,6.2,5.9,5.5,4.9,4.1,3.9,3.5,3.2,3.8,5.1,6.3,6.8,7.5,7.4,7.9,8.3,8.2,7.9,7.3,6.6,6,5.5,6.2,6.1,5.8,5.5,5.1,4.9,4.2,3.6,3.4,2.3,3.2,5.5,7.5,9.7,11.1,12.2,12.6,12.9,12.5,11.9,11,9.2,7.2,5.2,4.8,5.6,4.8,4,3.3,2.6,1.9,1.2,0.8,0.6,1.4,4.8,7.6,9.5,11,12.2,13.2,13.8,14.1,14.1,13.4,11.6,9.5,8.7,9.5,8.6,7.4,6.9,5.8,4.9,4.3,3.6,3.5,2.7,3.6,8.2,10.6,12.3,13.6,14.3,14.3,14,13.8,13.2,12.5,11.4,10.6,9.6,9.6,8.8,8,6.4,5.9,6,5.7,5.6,6,6.1,6.3,6.5,7.6,8.5,9.3,10.1,10.5,10.8,11,11.1,10.5,9.3,8,7.5,6.9,6.3,5.8,5.4,5.1,4.8,4.4,4.1,3.9,3.4,3.9,6.5,8.8,10.2,11.1,11.9,12.3,12.7,12.8,12.8,12.6,11.7,10.7,10,8.8,8.2,7.6,6.4,4.6,3.7,2.8,2.2,1.4,1,2.6,6.6,9.7,11.7,13.2,14.1,14.4,14.6,14.5,14.7,14.1,12.6,10.8,10.7,10.1,9.4,8.5,7.7,6.9,6.4,5.9,5.5,5,4.5,5.5,10.1,12.1,13.7,15,15.7,16.1,15.6,15.3,14.9,14.1,12.5,11,9.2,8.6,7.2,6.4,5.8,6.2,6.7,5.9,5.4,4.9,4.4,4.3,6.1,8.7,11.2,13.2,14.6,15.5,16.3,16.9,17.1,16.6,15.4,12.6,10.4,9.1,8.7,8.4,8,7.6,7.2,6.8,6.5,6,5.4,7,9.9,10,11.1,10,10.6,12.5,11.2,11.6,9.4,9.3,8,7,6.7,6.2,5.7,5.4,5,4.7]
    hummidity = [90,90,90,90,89,89,90,91,92,93,78,64,55,49,42,38,36,35,38,48,53,59,73,79,83,86,87,88,90,89,89,88,86,82,69,61,55,51,46,41,38,37,42,54,64,76,91,94,96,97,98,98,99,100,100,100,100,96,87,74,64,58,57,55,52,49,51,55,66,62,59,62,66,69,72,75,77,82,87,89,92,89,78,67,57,49,42,40,42,45,46,51,50,60,67,71,77,81,83,86,88,89,91,91,90,86,79,72,69,70,73,79,82,83,84,85,89,90,89,86,88,91,95,97,97,98,99,98,99,98,87,70,62,56,53,51,46,45,44,49,58,64,65,69,70,71,74,76,78,80,84,86,87,86,75,64,56,48,41,40,41,43,46,58,51,54,58,60,66,71,74,76,76,75,72,73,76,82,63,56,53,51,51,50,50,50,53,59,70,77,71,75,80,81,84,86,86,83,83,84,86,86,64,52,46,41,41,42,40,40,44,49,61,64,61,65,66,67,68,70,74,77,81,84,87,73,65,59,53,50,48,47,47,48,51,64,66,70,85,87,85,83,84,85,85,87,88,88,86,77,66,62,58,51,50,48,43,40,47,59,68,74,79,81,83,84,85,83,85,85,85,84,85,84,87,88,87,88,89,89,88,86,88,92,94,95,92,89,84,82,84,84,89,94,94,92,91,84,82,80,74,71,71,78,83,87,89,94,94,94,94,95,93,91,89,85,84,85,84,84,84,80,77,74,71,69,67,64,62,60,59,61,73,69,74,81,86,88,90,88,89,91,91,92,92,83,73,67,61,58,55,53,55,56,58,67,64,68,72,86,89,93,96,98,98,98,98,98,96,88,79,72,74,70,70,67,69,68,69,72,85,81,84,86,91,94,96,95,96,96,96,97,98,91,86,77,78,82,80,80,76,77,85,90,92,93,93,95,96,97,98,97,96,96,95,95,93,87,80,73,68,62,64,66,68,72,78,83,88,90,90,90,89,88,88,88,89,90,91,92,91,87,86,84,81,81,76,73,74,74,79,78,79,80,79,77,77,77,78,79,81,83,84,89,87,75,70,58,52,48,46,45,46,48,52,59,67,76,76,71,75,78,81,85,90,93,95,95,92,77,62,53,49,47,45,44,44,45,50,57,68,69,66,69,73,75,78,81,83,85,85,87,88,79,63,57,53,50,48,48,48,51,57,71,68,74,66,70,75,83,87,88,92,94,95,96,98,99,93,92,87,81,77,73,71,68,68,74,84,82,80,83,86,88,90,91,94,95,95,98,96,87,69,62,57,53,52,49,48,47,48,53,57,59,67,69,72,77,84,87,89,89,94,95,95,83,75,66,56,49,46,44,45,44,48,57,62,60,63,66,69,72,75,77,78,79,80,81,81,71,53,48,46,46,46,48,49,50,54,59,66,75,80,86,89,90,89,90,93,96,98,99,99,93,76,56,45,42,42,42,41,38,41,57,60,65,73,75,76,79,81,83,85,86,88,88,87,79,79,73,77,81,61,67,63,73,75,79,89,89,91,94,92,92,93]

    plt.figure(figsize=(10,4))
    plt.title('Temperature vs Relative Hummidity of Ankara, March 2023', fontsize=15, fontweight='bold')
    plt.scatter(temperature, hummidity, alpha=0.5)
    plt.ylabel(ylabel="Relative Hummidity [%]",fontsize=12)
    plt.xlabel(xlabel="Temperature [Â°C]",fontsize=12)
    plt.show()

def wind_speed_dir():
    windspeed = [12.1,12.3,12.7,9.7,10,12.4,14.5,13.5,11.8,13.8,12.6,10.6,10.1,8.4,8.9,8,8.4,7.2,4.6,2.6,1,4.6,6.9,7.6,8,8.3,9.4,8.7,8.2,6.9,4.2,2.1,1.3,2.9,2.3,3.3,4.7,7.6,8.7,9.2,9.7,11,13.3,7.6,8.2,18,18.5,16.5,15.1,11,12.7,12.9,11.3,9.7,8.9,7.2,6.9,5.2,1.8,6.9,10.3,11.8,14.5,17.8,20.3,23.3,20.2,15.8,13.4,10.5,7.1,5.9,5.8,8.3,8.6,9,7.6,6.2,7.6,8,4.8,2.5,4.8,10.6,14.5,17.9,18.2,18.5,20.9,24.2,19.1,17.9,18.2,18,16.9,17.4,18.1,18.9,15.4,13.5,13.9,15.2,15.2,13.2,12.1,10.9,9.1,12.1,16.3,14.2,13.7,12.9,11.8,3.3,1.9,2.3,5,4.3,2.7,5.1,12.4,25.6,25.7,27.5,29.3,28.4,26.6,21.8,18.2,15.3,14.9,16.9,17.7,15.3,16.9,19.2,19.1,17.6,15.8,14.2,11.7,8.9,8.2,9.7,10,8.7,9.7,9.5,9.4,9.7,10.9,10.5,9.7,8.7,7.6,15.1,21.7,18.1,19.4,18.2,16,12.2,9.1,5.9,4.3,5.1,6.5,8.5,11.4,15.5,15.5,13.8,11.5,9.7,8.2,8.5,9.1,10.8,7.9,13.8,15.8,15.8,15.8,15.1,13.4,10.8,8.7,16.9,18.7,11.2,7.5,7.4,8.7,8.2,8.4,10.7,11.1,10.5,10.2,9.5,10.3,10.8,10.9,19.7,23.9,20.9,24.4,23.9,23.5,22.6,16.3,12.4,11.7,12.3,14.5,16.5,18.1,20,20.9,21.7,21.2,22.2,21.1,19.6,18.2,14.8,14.8,15.6,17,18.1,20.3,20.2,16.8,7.5,0.5,4,5.6,7,10.5,15.5,18.9,21.1,21.4,22,21.8,22.1,22.2,22.7,23.9,23.9,22.2,24.3,25.5,24.3,22.9,24.2,33.3,33.1,28.2,23,24.9,26.6,28.7,27.2,22.3,20.9,16.2,13.7,13.3,14,13.4,10.9,11.4,13.1,15.8,18.3,19.2,16.2,16.5,12.4,10.5,8,5.1,4,6,10.1,12.7,14.3,15.5,15.5,16.6,17.1,17.4,17.9,18.5,19.6,20.8,18.5,18.9,22.7,22.8,23.8,22.6,22.3,25,24,20.2,19.3,18.7,17.8,16.1,14.7,13.8,11.8,12.1,11.2,11.9,12.6,10.9,10.3,8.9,9.7,13.9,14.8,15.5,6.9,5.4,4.3,5,6.9,4.6,4,3.4,4.8,3.3,3.3,4.4,9.6,11,9.4,8.2,6.9,7.4,8.7,5.8,3.6,2.5,2.6,4.3,4.6,6.5,8.7,10.4,11.5,11.1,9,5.3,2.2,6,8.1,7.6,8.5,8.4,8.7,9.4,9.3,9.5,9.5,9.2,9.7,8.4,15,17.4,17.3,14.2,15.5,18.3,18.4,12.8,7.4,5,4,3.6,3.9,5.7,6.4,4.5,6.9,7.3,8.1,10.3,12.7,13.2,11.7,8.8,10.1,10.1,6.5,5.6,7.2,7.6,6.8,6,7.1,8,8.3,8.4,7.8,7.5,9.3,7.9,7.6,6.9,6.6,6.7,6.8,6.2,5.6,7.2,7.5,4.8,8.4,10.6,11.8,13,12.7,13,13.7,13.7,14.8,14.6,15.3,15.9,15.9,16,18.6,18.4,17.7,17.8,17.1,15.9,14.4,14.9,23.9,31.5,26.8,34.8,32.2,27.8,27.1,27.4,28.1,27.1,26.7,25.6,24.5,22.4,20.6,21.3,20.5,18.7,16.6,15.1,13.9,11.5,8.6,12,16.3,15.9,11.4,14.3,14.6,14.6,15.5,15,16,14.8,12.4,10.6,8.9,7.4,8.2,8.3,6.9,5.9,4.9,3.9,4.7,5.7,2.7,1.4,3.3,5,6,8.7,8.6,8.7,8.9,10.3,12.7,12.5,9.4,4.6,3.1,4,5.2,6.6,6.3,6.6,6.1,3.9,7,8.4,7.6,4.7,5.4,7.9,3.4,6.2,6.1,5.5,6.8,6.3,4.3,4,4.8,3.7,4,5.2,5.5,12.9,11.6,10.8,12.5,12.2,12.8,13.2,12.2,10.6,11.3,13.6,13.3,12.8,12.9,13,12.4,11.5,10.2,7.4,5.8,5.1,5.5,5.6,5,4.1,4,3,2.6,3.2,3.1,2.4,1.8,1.5,1,2.5,7.3,7.6,6.6,6.4,5.9,8,9.6,6.8,4.7,3.6,3.6,4.4,5.6,8.7,9.6,9.5,10.3,10.6,10,9,7.4,3.2,0,2.1,5.2,6.8,7.9,8.4,9,10,12.1,9.5,6.5,4.3,2.3,2.2,5.4,5.6,5.1,3.7,2.6,3.2,4.4,5.1,4.1,4,7.1,10.7,10.5,13.4,14.6,17.9,19.8,17.3,18.5,17,12.3,12.6,14.5,12.9,10.4,7.5,6.3,6.5,6.8,6.2,6,5.1,4.4,4.3,6.6,10.8,13.5,13,13.3,15.5,15.8,10.1,8.4,14.5,18.6,22.3,24.9,25.5,26.8,23.6,23.6,23.9,25.4,24.5,22.2,23.6,23.1,22.3,23.4,31.7,21.4,30.2,26.4,24.1,24.7,29.3,21.7,21.9,23.1,18.8,14.5,10.9,7,7.8]
    winddir = [53,38,43,51,52,64,76,74,63,57,63,80,107,137,140,144,160,174,198,236,45,72,81,82,72,56,47,42,52,62,70,59,326,300,288,264,247,239,246,244,248,247,257,289,38,57,66,67,65,67,61,60,59,63,69,72,81,74,270,242,241,243,256,256,253,257,269,287,306,311,294,281,277,265,268,268,265,263,251,252,257,225,243,252,247,240,243,249,251,255,258,255,252,250,246,236,229,235,237,226,217,211,202,202,197,189,189,197,208,204,210,210,220,319,22,129,120,132,157,225,244,244,239,236,238,246,254,257,261,261,262,272,276,261,258,264,266,271,269,261,259,243,221,207,195,175,165,169,173,184,186,184,180,173,185,213,220,226,227,232,239,242,236,218,180,172,183,192,204,222,224,223,224,222,218,208,198,195,204,231,240,243,246,245,246,244,246,250,254,266,253,231,218,218,227,225,216,207,203,205,209,201,207,230,239,234,236,239,243,245,248,244,236,232,235,238,235,231,228,230,228,228,237,238,232,227,231,232,234,227,233,235,239,253,315,90,117,145,174,192,198,200,200,198,196,196,197,195,196,198,200,201,202,207,206,195,196,197,205,209,202,199,204,208,203,195,183,177,180,180,185,197,208,212,215,216,206,212,212,216,202,198,225,275,343,2,8,10,12,4,5,7,7,10,21,26,28,27,31,36,39,32,31,38,41,40,39,37,34,32,34,31,28,27,23,21,29,31,34,36,50,59,69,76,91,99,94,95,120,137,135,117,32,347,347,13,35,56,58,47,15,51,51,48,86,143,225,214,185,141,174,187,200,221,241,247,242,189,107,111,121,118,115,114,108,106,101,101,101,105,130,169,204,227,240,226,225,228,220,219,210,190,180,158,145,164,119,81,79,77,65,55,55,56,55,92,94,96,75,84,115,155,213,246,275,304,320,326,325,306,300,315,309,311,324,335,324,320,333,343,347,350,342,348,355,352,355,358,358,356,351,352,355,342,352,351,357,358,352,352,356,356,353,6,16,6,13,18,13,5,3,3,4,2,360,358,356,356,357,359,358,355,348,343,340,338,344,355,354,336,332,327,327,329,339,352,4,17,28,32,29,29,34,39,38,36,34,58,72,67,180,221,240,253,265,270,263,256,234,227,229,238,231,144,153,106,99,103,103,93,112,111,100,93,99,160,183,162,159,180,157,155,193,246,260,257,259,243,236,203,207,210,217,226,236,238,235,236,242,248,248,251,259,257,265,280,284,293,293,292,309,328,345,339,322,333,346,344,333,324,333,360,14,315,278,259,251,248,254,281,288,283,273,266,276,307,351,27,45,56,61,61,62,60,61,67,63,180,239,245,252,246,245,233,229,247,261,267,265,252,180,143,135,141,151,164,153,145,141,142,175,204,225,243,246,250,255,260,266,278,274,265,270,277,283,290,305,329,357,18,36,65,82,99,132,171,195,205,208,199,202,210,207,160,153,165,180,190,193,197,199,201,198,196,190,188,196,201,203,214,230,226,237,250,248,228,238,234,224,231,238,247,261,291,338]

    plt.figure(figsize=(10,4))
    plt.title('Wind Speed vs Wind Direction of Ankara, March 2023', fontsize=15, fontweight='bold')
    plt.scatter( winddir, windspeed, alpha=0.5)
    plt.ylabel(ylabel="Wind Speed [km/h]",fontsize=12)
    plt.xlabel(xlabel="Wind Direction [Â°]",fontsize=12)
    plt.show()


    N = len(windspeed)
    r = windspeed
    theta = [x*2 * np.pi / 360 for x in winddir]
    area = [0.25*x*x for x in windspeed]  
    #colors = [x + np.pi/16 for x in theta]
    colors = [x for x in windspeed] 

    fig = plt.figure()

    ax = fig.add_subplot(projection='polar')
    ax.set_axisbelow(True)
    c = ax.scatter(theta, r, c=colors, s=area, cmap='GnBu', alpha=0.75) 
    plt.show()




def grading():
    fig, ax = plt.subplots(figsize=(6.5, 1.65), layout='constrained')
    ax.add_patch(Rectangle((-0.2, -0.35), 11.2, 0.7, color='C1', alpha=0.8))
    for i, alpha in enumerate(np.linspace(0, 1, 11)):
        ax.add_patch(Rectangle((i, 0.05), 0.8, 0.6, alpha=alpha, zorder=0))
        ax.text(i+0.4, 0.85, f"{alpha:.1f}", ha='center')
        ax.add_patch(Rectangle((i, -0.05), 0.8, -0.6, alpha=alpha, zorder=2))
    ax.set_xlim(-0.2, 13)
    ax.set_ylim(-1, 1)
    ax.set_title('alpha values')
    ax.text(11.3, 0.6, 'zorder=1', va='center', color='C0')
    ax.text(11.3, 0, 'zorder=2\nalpha=0.8', va='center', color='C1')
    ax.text(11.3, -0.6, 'zorder=3', va='center', color='C0')
    ax.axis('off')


if __name__ == "__main__":
    temperature_plot()
    precipitation_bar()
    weathercode_pie()
    wind_direction()
    temp_humm_scatter()
    wind_speed_dir()
#     grading()
    plt.close()


    # TO DO : mean, median, std deviation, correlation factor


